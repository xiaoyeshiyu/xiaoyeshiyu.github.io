<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小夜时雨</title>
  <icon>https://www.xiaoyeshiyu.com/icon.png</icon>
  <subtitle>君子敬其在己者，而不慕其在天者，是以日进也。</subtitle>
  <link href="https://www.xiaoyeshiyu.com/atom.xml" rel="self"/>
  
  <link href="https://www.xiaoyeshiyu.com/"/>
  <updated>2024-02-22T09:47:37.667Z</updated>
  <id>https://www.xiaoyeshiyu.com/</id>
  
  <author>
    <name>Mitaka xu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Kubernetes 生产化运维</title>
    <link href="https://www.xiaoyeshiyu.com/post/3045b31e.html"/>
    <id>https://www.xiaoyeshiyu.com/post/3045b31e.html</id>
    <published>2024-02-18T16:00:00.000Z</published>
    <updated>2024-02-22T09:47:37.667Z</updated>
    
    
    <summary type="html">生产化环境涉及到 镜像管理、CI/CD、DevOps、日志收集、监控，目的是高效开发，以及确保在生产环境中稳定运行，高效运维。</summary>
    
    
    
    <category term="云原生训练营" scheme="https://www.xiaoyeshiyu.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F%E8%AE%AD%E7%BB%83%E8%90%A5/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 生产化集群的管理</title>
    <link href="https://www.xiaoyeshiyu.com/post/93ebed81.html"/>
    <id>https://www.xiaoyeshiyu.com/post/93ebed81.html</id>
    <published>2024-01-30T16:00:00.000Z</published>
    <updated>2024-02-18T02:35:33.640Z</updated>
    
    
    <summary type="html">生产化集群的核心是监控和自动化扩展，从集群的高可用性、安全性和保障资源使用率上高效管理集群环境。</summary>
    
    
    
    <category term="云原生训练营" scheme="https://www.xiaoyeshiyu.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F%E8%AE%AD%E7%BB%83%E8%90%A5/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 控制平面组件：生命周期管理和服务发现</title>
    <link href="https://www.xiaoyeshiyu.com/post/f2e1.html"/>
    <id>https://www.xiaoyeshiyu.com/post/f2e1.html</id>
    <published>2024-01-23T16:00:00.000Z</published>
    <updated>2024-02-18T02:35:30.632Z</updated>
    
    
    <summary type="html">Kubernetes 控制平面组件的两个关键方面：生命周期管理和服务发现。在 Kubernetes 中，控制平面是整个集群的核心组件，负责管理和控制集群的运行。</summary>
    
    
    
    <category term="云原生训练营" scheme="https://www.xiaoyeshiyu.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F%E8%AE%AD%E7%BB%83%E8%90%A5/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 控制平面组件：调度器和控制器</title>
    <link href="https://www.xiaoyeshiyu.com/post/ea1d.html"/>
    <id>https://www.xiaoyeshiyu.com/post/ea1d.html</id>
    <published>2024-01-17T16:00:00.000Z</published>
    <updated>2024-01-24T10:25:04.918Z</updated>
    
    
    <summary type="html">调度器和控制器是 Kubernetes 上非常重要的两个组件：调度器负责智能地分配容器化应用程序的工作负载到集群中的节点，以优化性能和资源利用率；控制器负责维护系统的期望状态，通过监控和自动化手段确保集群中的应用程序始终符合定义的规范。</summary>
    
    
    
    <category term="云原生训练营" scheme="https://www.xiaoyeshiyu.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F%E8%AE%AD%E7%BB%83%E8%90%A5/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 控制平面组件：API Server</title>
    <link href="https://www.xiaoyeshiyu.com/post/bad7.html"/>
    <id>https://www.xiaoyeshiyu.com/post/bad7.html</id>
    <published>2024-01-14T16:00:00.000Z</published>
    <updated>2024-01-18T09:03:38.183Z</updated>
    
    
    <summary type="html">Kubernetes 控制平面的核心引擎之一，API Server 扮演着整个系统的关键角色。作为 Kubernetes 集群的掌控中心，API Server 负责接收、处理和管理集群中的所有资源对象，从而实现集群的协同工作和资源编排。</summary>
    
    
    
    <category term="云原生训练营" scheme="https://www.xiaoyeshiyu.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F%E8%AE%AD%E7%BB%83%E8%90%A5/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 控制平面组件：etcd</title>
    <link href="https://www.xiaoyeshiyu.com/post/387e.html"/>
    <id>https://www.xiaoyeshiyu.com/post/387e.html</id>
    <published>2024-01-09T16:00:00.000Z</published>
    <updated>2024-01-24T05:55:00.370Z</updated>
    
    
    <summary type="html">分布式键值存储系统 etcd 在 Kubernetes 架构中的关键作用。</summary>
    
    
    
    <category term="云原生训练营" scheme="https://www.xiaoyeshiyu.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F%E8%AE%AD%E7%BB%83%E8%90%A5/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 架构原则和对象设计</title>
    <link href="https://www.xiaoyeshiyu.com/post/ff15.html"/>
    <id>https://www.xiaoyeshiyu.com/post/ff15.html</id>
    <published>2024-01-03T16:00:00.000Z</published>
    <updated>2024-01-10T10:37:44.335Z</updated>
    
    
    <summary type="html">探讨 Kubernetes 核心设计原理和对象模型，通过详细分析 Kubernetes 的架构设计原则，以及对象如何在 Kubernetes 中发挥作用，了解这个开源容器编排平台的内部运作机制理解 Kubernetes 的设计哲学和对象模型，并探索如何有效地利用这些概念来构建可靠、可扩展的容器化应用程序。</summary>
    
    
    
    <category term="云原生训练营" scheme="https://www.xiaoyeshiyu.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F%E8%AE%AD%E7%BB%83%E8%90%A5/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Docker 核心技术</title>
    <link href="https://www.xiaoyeshiyu.com/post/cdb9.html"/>
    <id>https://www.xiaoyeshiyu.com/post/cdb9.html</id>
    <published>2023-12-28T16:00:00.000Z</published>
    <updated>2024-01-18T09:03:11.621Z</updated>
    
    
    <summary type="html">Docker 是如何实现轻量级、可移植和隔离化的容器化解决方案，从容器镜像到容器运行时，再到容器编排，介绍 Docker 技术栈的各个组成部分，并探讨它们是如何相互配合以提供高效、可靠的应用程序部署和管理环境的。</summary>
    
    
    
    <category term="云原生训练营" scheme="https://www.xiaoyeshiyu.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F%E8%AE%AD%E7%BB%83%E8%90%A5/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>channel原理</title>
    <link href="https://www.xiaoyeshiyu.com/post/52fe.html"/>
    <id>https://www.xiaoyeshiyu.com/post/52fe.html</id>
    <published>2023-12-24T16:00:00.000Z</published>
    <updated>2023-12-26T01:21:17.740Z</updated>
    
    
    <summary type="html">通道是 Go 语言中用于协程之间通信的重要机制。通过阻塞和同步的方式，通道实现了安全的数据传递和协程之间的同步操作。通道的实现依赖于调度器和锁机制，通过队列和阻塞机制实现数据的传递。通道在并发编程中具有广泛的应用场景，可以提高程序的可靠性和性能。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Go runtime之 GC</title>
    <link href="https://www.xiaoyeshiyu.com/post/ede3.html"/>
    <id>https://www.xiaoyeshiyu.com/post/ede3.html</id>
    <published>2023-12-20T16:00:00.000Z</published>
    <updated>2023-12-29T08:11:29.875Z</updated>
    
    
    <summary type="html">Go runtime 的垃圾回收（Garbage Collection）是实现自动内存管理的关键组成部分。Go 的垃圾回收器采用了一系列策略和算法，旨在提供高效的内存回收，并减少开发者对内存管理的负担。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Go runtime之内存分配</title>
    <link href="https://www.xiaoyeshiyu.com/post/ab88.html"/>
    <id>https://www.xiaoyeshiyu.com/post/ab88.html</id>
    <published>2023-12-14T16:00:00.000Z</published>
    <updated>2023-12-22T09:03:21.292Z</updated>
    
    
    <summary type="html">Go runtime 的内存分配是其高效性和并发性的关键组成部分之一。Go 在内存分配方面采用了一些策略和算法，以提供快速的内存分配和高效的垃圾回收。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Go runtime之 Goroutine 原理</title>
    <link href="https://www.xiaoyeshiyu.com/post/c06b.html"/>
    <id>https://www.xiaoyeshiyu.com/post/c06b.html</id>
    <published>2023-12-12T16:00:00.000Z</published>
    <updated>2023-12-22T09:03:26.911Z</updated>
    
    
    <summary type="html">Goroutine 是 Go 编程语言中一种轻量级的并发执行单元，它是 Go runtime 的核心特性之一。Goroutine 允许开发者以一种简单、高效且可扩展的方式编写并发代码。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>多活</title>
    <link href="https://www.xiaoyeshiyu.com/post/b09f.html"/>
    <id>https://www.xiaoyeshiyu.com/post/b09f.html</id>
    <published>2023-12-10T16:00:00.000Z</published>
    <updated>2023-12-12T08:33:33.122Z</updated>
    
    
    <summary type="html">本文将探讨多活（Multi-Region）架构在现代云计算和分布式系统中的重要性和应用。多活是一种设计原则和技术，通过在服务范围内部署多个数据中心或区域，实现高可用性、弹性和容错能力。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>DNS &amp; CND</title>
    <link href="https://www.xiaoyeshiyu.com/post/9a24.html"/>
    <id>https://www.xiaoyeshiyu.com/post/9a24.html</id>
    <published>2023-12-06T16:00:00.000Z</published>
    <updated>2023-12-12T08:31:38.476Z</updated>
    
    
    <summary type="html">这篇文章将探讨DNS（域名系统）和CDN（内容分发网络）的重要性和功能，介绍一些常见的DNS和CDN优化策略，以提高网站的可用性、安全性和性能。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>微服务可观察性之链路追踪</title>
    <link href="https://www.xiaoyeshiyu.com/post/c682.html"/>
    <id>https://www.xiaoyeshiyu.com/post/c682.html</id>
    <published>2023-12-05T16:00:00.000Z</published>
    <updated>2023-12-07T02:19:38.552Z</updated>
    
    
    <summary type="html">这篇文章将探讨微服务架构中关键的可观察性工具之一——链路追踪。我们将深入研究链路追踪的概念，重点介绍它在微服务环境中的作用和优势。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>微服务可观察性之日志</title>
    <link href="https://www.xiaoyeshiyu.com/post/cfd3.html"/>
    <id>https://www.xiaoyeshiyu.com/post/cfd3.html</id>
    <published>2023-11-29T16:00:00.000Z</published>
    <updated>2023-12-06T03:51:43.543Z</updated>
    
    
    <summary type="html">这篇文章将深入探讨微服务架构中的可观察性，着重于日志记录作为关键的监控和调试工具。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Go网络编程</title>
    <link href="https://www.xiaoyeshiyu.com/post/4d37.html"/>
    <id>https://www.xiaoyeshiyu.com/post/4d37.html</id>
    <published>2023-11-08T16:00:00.000Z</published>
    <updated>2023-11-30T03:50:47.270Z</updated>
    
    
    <summary type="html">介绍通过 Go 实现一个网络协议，进而实现一个基于 TCP 长连接的 im 线上聊天框架。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>分布式事务</title>
    <link href="https://www.xiaoyeshiyu.com/post/fa8f.html"/>
    <id>https://www.xiaoyeshiyu.com/post/fa8f.html</id>
    <published>2023-11-05T16:00:00.000Z</published>
    <updated>2023-11-29T09:43:45.064Z</updated>
    
    
    <summary type="html">在现代分布式系统中，数据一致性是至关重要的。而分布式事务作为一种关键的技术手段，能够确保在分布式环境下的数据操作的一致性。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>分布式缓存</title>
    <link href="https://www.xiaoyeshiyu.com/post/8bda.html"/>
    <id>https://www.xiaoyeshiyu.com/post/8bda.html</id>
    <published>2023-11-01T16:00:00.000Z</published>
    <updated>2023-11-09T06:21:52.982Z</updated>
    
    
    <summary type="html">在当今的分布式系统中，高性能和可扩展性是至关重要的。而分布式缓存作为一种关键的技术手段，能够显著提升系统的性能和可扩展性。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>架构设计之历史记录设计</title>
    <link href="https://www.xiaoyeshiyu.com/post/f986.html"/>
    <id>https://www.xiaoyeshiyu.com/post/f986.html</id>
    <published>2023-10-29T16:00:00.000Z</published>
    <updated>2023-11-02T07:02:57.744Z</updated>
    
    
    <summary type="html">历史记录是现代应用程序中常见的功能之一，它记录了用户在应用程序中的活动和操作。一个良好设计的历史记录系统可以提供方便的回放、导航和个性化推荐等功能，为用户提供更好的体验。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
</feed>
