<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小夜时雨</title>
  <icon>https://www.xiaoyeshiyu.com/icon.png</icon>
  <subtitle>君子敬其在己者，而不慕其在天者，是以日进也。</subtitle>
  <link href="https://www.xiaoyeshiyu.com/atom.xml" rel="self"/>
  
  <link href="https://www.xiaoyeshiyu.com/"/>
  <updated>2024-04-01T02:03:48.191Z</updated>
  <id>https://www.xiaoyeshiyu.com/</id>
  
  <author>
    <name>Mitaka xu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Elasticsearch 利用 ELK 做大数据分析</title>
    <link href="https://www.xiaoyeshiyu.com/post/36f79291.html"/>
    <id>https://www.xiaoyeshiyu.com/post/36f79291.html</id>
    <published>2024-03-30T16:00:00.000Z</published>
    <updated>2024-04-01T02:03:48.191Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;Logstash-入门及架构介绍&quot;&gt;&lt;a href=&quot;#Logstash-入门及架构介绍&quot; class=&quot;headerlink&quot; title=&quot;Logstash 入门及架构介绍&quot;&gt;&lt;/a&gt;Logstash 入门及架构介绍&lt;/h1&gt;&lt;p&gt;Logstash：ELT</summary>
        
      
    
    
    
    <category term="Elasticsearch" scheme="https://www.xiaoyeshiyu.com/categories/Elasticsearch/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch 集群管理</title>
    <link href="https://www.xiaoyeshiyu.com/post/944b9f5e.html"/>
    <id>https://www.xiaoyeshiyu.com/post/944b9f5e.html</id>
    <published>2024-03-29T16:00:00.000Z</published>
    <updated>2024-03-31T09:36:35.334Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;集群身份认证与用户鉴权&quot;&gt;&lt;a href=&quot;#集群身份认证与用户鉴权&quot; class=&quot;headerlink&quot; title=&quot;集群身份认证与用户鉴权&quot;&gt;&lt;/a&gt;集群身份认证与用户鉴权&lt;/h1&gt;&lt;p&gt;如果 es</summary>
        
      
    
    
    
    <category term="Elasticsearch" scheme="https://www.xiaoyeshiyu.com/categories/Elasticsearch/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch 搜索、聚合和数据建模</title>
    <link href="https://www.xiaoyeshiyu.com/post/f969d9e9.html"/>
    <id>https://www.xiaoyeshiyu.com/post/f969d9e9.html</id>
    <published>2024-03-27T16:00:00.000Z</published>
    <updated>2024-04-01T02:03:41.898Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;基于词项和基于全文的检索&quot;&gt;&lt;a href=&quot;#基于词项和基于全文的检索&quot; class=&quot;headerlink&quot; title=&quot;基于词项和基于全文的检索&quot;&gt;&lt;/a&gt;基于词项和基于全文的检索&lt;/h1&gt;&lt;h2 id=&quot;基于-Term-的查询&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="Elasticsearch" scheme="https://www.xiaoyeshiyu.com/categories/Elasticsearch/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch 介绍</title>
    <link href="https://www.xiaoyeshiyu.com/post/ff89bae5.html"/>
    <id>https://www.xiaoyeshiyu.com/post/ff89bae5.html</id>
    <published>2024-03-25T16:00:00.000Z</published>
    <updated>2024-03-29T03:16:32.206Z</updated>
    
    
    <summary type="html">Elasticsearch 是一个开源的分布式搜索与分析引擎，提供了近实时搜索和聚合两大功能。</summary>
    
    
    
    <category term="Elasticsearch" scheme="https://www.xiaoyeshiyu.com/categories/Elasticsearch/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Nginx 系统层面性能优化</title>
    <link href="https://www.xiaoyeshiyu.com/post/31bd10f.html"/>
    <id>https://www.xiaoyeshiyu.com/post/31bd10f.html</id>
    <published>2024-03-24T16:00:00.000Z</published>
    <updated>2024-03-26T01:28:34.767Z</updated>
    
    
    <summary type="html">进一步提高QPS，可以针对使用场景进行优化</summary>
    
    
    
    <category term="Nginx" scheme="https://www.xiaoyeshiyu.com/categories/Nginx/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Nginx负载均衡和反向代理</title>
    <link href="https://www.xiaoyeshiyu.com/post/4cec1707.html"/>
    <id>https://www.xiaoyeshiyu.com/post/4cec1707.html</id>
    <published>2024-03-22T16:00:00.000Z</published>
    <updated>2024-03-25T03:59:19.569Z</updated>
    
    
    <summary type="html">Nginx 使用的比较多的是它的负载均衡和反向代理能力，作为网关或者 LB。</summary>
    
    
    
    <category term="Nginx" scheme="https://www.xiaoyeshiyu.com/categories/Nginx/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Nginx架构、阶段、模块</title>
    <link href="https://www.xiaoyeshiyu.com/post/4b7bcf38.html"/>
    <id>https://www.xiaoyeshiyu.com/post/4b7bcf38.html</id>
    <published>2024-03-18T16:00:00.000Z</published>
    <updated>2024-03-25T01:59:49.547Z</updated>
    
    
    <summary type="html">Nginx 以其强大的性能闻名，核心是它的架构模型和请求处理过程和能力。</summary>
    
    
    
    <category term="Nginx" scheme="https://www.xiaoyeshiyu.com/categories/Nginx/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>基于 Istio 的⾼级流量管理</title>
    <link href="https://www.xiaoyeshiyu.com/post/a0155a17.html"/>
    <id>https://www.xiaoyeshiyu.com/post/a0155a17.html</id>
    <published>2024-02-29T16:00:00.000Z</published>
    <updated>2024-03-08T01:27:11.357Z</updated>
    
    
    <summary type="html">通过 Istio 的强大功能，可以实现流量控制、智能路由和负载均衡等高级数据管理功能，并且构建稳健的微服务架构，优化流量控制策略以提高性能和可靠性。</summary>
    
    
    
    <category term="云原生训练营" scheme="https://www.xiaoyeshiyu.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F%E8%AE%AD%E7%BB%83%E8%90%A5/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>将应用迁移至Kubernetes平台</title>
    <link href="https://www.xiaoyeshiyu.com/post/16548b32.html"/>
    <id>https://www.xiaoyeshiyu.com/post/16548b32.html</id>
    <published>2024-02-22T16:00:00.000Z</published>
    <updated>2024-03-08T03:12:01.749Z</updated>
    
    
    <summary type="html">云原生具有很多优势，但是在应用上云过程中也有一些挑战，例如如何利用 Kubernetes 的弹性、可扩展性和容错性，提高应用程序的部署效率和稳定性。</summary>
    
    
    
    <category term="云原生训练营" scheme="https://www.xiaoyeshiyu.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F%E8%AE%AD%E7%BB%83%E8%90%A5/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 生产化运维</title>
    <link href="https://www.xiaoyeshiyu.com/post/3045b31e.html"/>
    <id>https://www.xiaoyeshiyu.com/post/3045b31e.html</id>
    <published>2024-02-18T16:00:00.000Z</published>
    <updated>2024-02-22T09:47:37.667Z</updated>
    
    
    <summary type="html">生产化环境涉及到 镜像管理、CI/CD、DevOps、日志收集、监控，目的是高效开发，以及确保在生产环境中稳定运行，高效运维。</summary>
    
    
    
    <category term="云原生训练营" scheme="https://www.xiaoyeshiyu.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F%E8%AE%AD%E7%BB%83%E8%90%A5/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 生产化集群的管理</title>
    <link href="https://www.xiaoyeshiyu.com/post/93ebed81.html"/>
    <id>https://www.xiaoyeshiyu.com/post/93ebed81.html</id>
    <published>2024-01-30T16:00:00.000Z</published>
    <updated>2024-02-18T02:35:33.640Z</updated>
    
    
    <summary type="html">生产化集群的核心是监控和自动化扩展，从集群的高可用性、安全性和保障资源使用率上高效管理集群环境。</summary>
    
    
    
    <category term="云原生训练营" scheme="https://www.xiaoyeshiyu.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F%E8%AE%AD%E7%BB%83%E8%90%A5/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 控制平面组件：生命周期管理和服务发现</title>
    <link href="https://www.xiaoyeshiyu.com/post/f2e1.html"/>
    <id>https://www.xiaoyeshiyu.com/post/f2e1.html</id>
    <published>2024-01-23T16:00:00.000Z</published>
    <updated>2024-02-18T02:35:30.632Z</updated>
    
    
    <summary type="html">Kubernetes 控制平面组件的两个关键方面：生命周期管理和服务发现。在 Kubernetes 中，控制平面是整个集群的核心组件，负责管理和控制集群的运行。</summary>
    
    
    
    <category term="云原生训练营" scheme="https://www.xiaoyeshiyu.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F%E8%AE%AD%E7%BB%83%E8%90%A5/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 控制平面组件：调度器和控制器</title>
    <link href="https://www.xiaoyeshiyu.com/post/ea1d.html"/>
    <id>https://www.xiaoyeshiyu.com/post/ea1d.html</id>
    <published>2024-01-17T16:00:00.000Z</published>
    <updated>2024-01-24T10:25:04.918Z</updated>
    
    
    <summary type="html">调度器和控制器是 Kubernetes 上非常重要的两个组件：调度器负责智能地分配容器化应用程序的工作负载到集群中的节点，以优化性能和资源利用率；控制器负责维护系统的期望状态，通过监控和自动化手段确保集群中的应用程序始终符合定义的规范。</summary>
    
    
    
    <category term="云原生训练营" scheme="https://www.xiaoyeshiyu.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F%E8%AE%AD%E7%BB%83%E8%90%A5/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 控制平面组件：API Server</title>
    <link href="https://www.xiaoyeshiyu.com/post/bad7.html"/>
    <id>https://www.xiaoyeshiyu.com/post/bad7.html</id>
    <published>2024-01-14T16:00:00.000Z</published>
    <updated>2024-01-18T09:03:38.183Z</updated>
    
    
    <summary type="html">Kubernetes 控制平面的核心引擎之一，API Server 扮演着整个系统的关键角色。作为 Kubernetes 集群的掌控中心，API Server 负责接收、处理和管理集群中的所有资源对象，从而实现集群的协同工作和资源编排。</summary>
    
    
    
    <category term="云原生训练营" scheme="https://www.xiaoyeshiyu.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F%E8%AE%AD%E7%BB%83%E8%90%A5/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 控制平面组件：etcd</title>
    <link href="https://www.xiaoyeshiyu.com/post/387e.html"/>
    <id>https://www.xiaoyeshiyu.com/post/387e.html</id>
    <published>2024-01-09T16:00:00.000Z</published>
    <updated>2024-01-24T05:55:00.370Z</updated>
    
    
    <summary type="html">分布式键值存储系统 etcd 在 Kubernetes 架构中的关键作用。</summary>
    
    
    
    <category term="云原生训练营" scheme="https://www.xiaoyeshiyu.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F%E8%AE%AD%E7%BB%83%E8%90%A5/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 架构原则和对象设计</title>
    <link href="https://www.xiaoyeshiyu.com/post/ff15.html"/>
    <id>https://www.xiaoyeshiyu.com/post/ff15.html</id>
    <published>2024-01-03T16:00:00.000Z</published>
    <updated>2024-01-10T10:37:44.335Z</updated>
    
    
    <summary type="html">探讨 Kubernetes 核心设计原理和对象模型，通过详细分析 Kubernetes 的架构设计原则，以及对象如何在 Kubernetes 中发挥作用，了解这个开源容器编排平台的内部运作机制理解 Kubernetes 的设计哲学和对象模型，并探索如何有效地利用这些概念来构建可靠、可扩展的容器化应用程序。</summary>
    
    
    
    <category term="云原生训练营" scheme="https://www.xiaoyeshiyu.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F%E8%AE%AD%E7%BB%83%E8%90%A5/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Docker 核心技术</title>
    <link href="https://www.xiaoyeshiyu.com/post/cdb9.html"/>
    <id>https://www.xiaoyeshiyu.com/post/cdb9.html</id>
    <published>2023-12-28T16:00:00.000Z</published>
    <updated>2024-01-18T09:03:11.621Z</updated>
    
    
    <summary type="html">Docker 是如何实现轻量级、可移植和隔离化的容器化解决方案，从容器镜像到容器运行时，再到容器编排，介绍 Docker 技术栈的各个组成部分，并探讨它们是如何相互配合以提供高效、可靠的应用程序部署和管理环境的。</summary>
    
    
    
    <category term="云原生训练营" scheme="https://www.xiaoyeshiyu.com/categories/%E4%BA%91%E5%8E%9F%E7%94%9F%E8%AE%AD%E7%BB%83%E8%90%A5/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>channel原理</title>
    <link href="https://www.xiaoyeshiyu.com/post/52fe.html"/>
    <id>https://www.xiaoyeshiyu.com/post/52fe.html</id>
    <published>2023-12-24T16:00:00.000Z</published>
    <updated>2023-12-26T01:21:17.740Z</updated>
    
    
    <summary type="html">通道是 Go 语言中用于协程之间通信的重要机制。通过阻塞和同步的方式，通道实现了安全的数据传递和协程之间的同步操作。通道的实现依赖于调度器和锁机制，通过队列和阻塞机制实现数据的传递。通道在并发编程中具有广泛的应用场景，可以提高程序的可靠性和性能。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Go runtime之 GC</title>
    <link href="https://www.xiaoyeshiyu.com/post/ede3.html"/>
    <id>https://www.xiaoyeshiyu.com/post/ede3.html</id>
    <published>2023-12-20T16:00:00.000Z</published>
    <updated>2023-12-29T08:11:29.875Z</updated>
    
    
    <summary type="html">Go runtime 的垃圾回收（Garbage Collection）是实现自动内存管理的关键组成部分。Go 的垃圾回收器采用了一系列策略和算法，旨在提供高效的内存回收，并减少开发者对内存管理的负担。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Go runtime之内存分配</title>
    <link href="https://www.xiaoyeshiyu.com/post/ab88.html"/>
    <id>https://www.xiaoyeshiyu.com/post/ab88.html</id>
    <published>2023-12-14T16:00:00.000Z</published>
    <updated>2024-03-14T08:51:26.424Z</updated>
    
    
    <summary type="html">Go runtime 的内存分配是其高效性和并发性的关键组成部分之一。Go 在内存分配方面采用了一些策略和算法，以提供快速的内存分配和高效的垃圾回收。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
</feed>
