<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小夜时雨</title>
  <icon>https://www.xiaoyeshiyu.com/icon.png</icon>
  <subtitle>君子敬其在己者，而不慕其在天者，是以日进也。</subtitle>
  <link href="https://www.xiaoyeshiyu.com/atom.xml" rel="self"/>
  
  <link href="https://www.xiaoyeshiyu.com/"/>
  <updated>2023-12-12T08:29:06.911Z</updated>
  <id>https://www.xiaoyeshiyu.com/</id>
  
  <author>
    <name>Mitaka xu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>多活</title>
    <link href="https://www.xiaoyeshiyu.com/post/b09f.html"/>
    <id>https://www.xiaoyeshiyu.com/post/b09f.html</id>
    <published>2023-12-10T16:00:00.000Z</published>
    <updated>2023-12-12T08:29:06.911Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;多活系统&quot;&gt;&lt;a href=&quot;#多活系统&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>DNS &amp; CND</title>
    <link href="https://www.xiaoyeshiyu.com/post/9a24.html"/>
    <id>https://www.xiaoyeshiyu.com/post/9a24.html</id>
    <published>2023-12-06T16:00:00.000Z</published>
    <updated>2023-12-12T08:29:56.926Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;DNS&quot;&gt;&lt;a href=&quot;#DNS&quot; class=&quot;headerlink&quot; title=&quot;DNS&quot;&gt;&lt;/a&gt;DNS&lt;/h1&gt;&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>微服务可观察性之链路追踪</title>
    <link href="https://www.xiaoyeshiyu.com/post/c682.html"/>
    <id>https://www.xiaoyeshiyu.com/post/c682.html</id>
    <published>2023-12-05T16:00:00.000Z</published>
    <updated>2023-12-07T02:19:38.552Z</updated>
    
    
    <summary type="html">这篇文章将探讨微服务架构中关键的可观察性工具之一——链路追踪。我们将深入研究链路追踪的概念，重点介绍它在微服务环境中的作用和优势。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>微服务可观察性之日志</title>
    <link href="https://www.xiaoyeshiyu.com/post/cfd3.html"/>
    <id>https://www.xiaoyeshiyu.com/post/cfd3.html</id>
    <published>2023-11-29T16:00:00.000Z</published>
    <updated>2023-12-06T03:51:43.543Z</updated>
    
    
    <summary type="html">这篇文章将深入探讨微服务架构中的可观察性，着重于日志记录作为关键的监控和调试工具。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Go网络编程</title>
    <link href="https://www.xiaoyeshiyu.com/post/4d37.html"/>
    <id>https://www.xiaoyeshiyu.com/post/4d37.html</id>
    <published>2023-11-08T16:00:00.000Z</published>
    <updated>2023-11-30T03:50:47.270Z</updated>
    
    
    <summary type="html">介绍通过 Go 实现一个网络协议，进而实现一个基于 TCP 长连接的 im 线上聊天框架。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>分布式事务</title>
    <link href="https://www.xiaoyeshiyu.com/post/fa8f.html"/>
    <id>https://www.xiaoyeshiyu.com/post/fa8f.html</id>
    <published>2023-11-05T16:00:00.000Z</published>
    <updated>2023-11-29T09:43:45.064Z</updated>
    
    
    <summary type="html">在现代分布式系统中，数据一致性是至关重要的。而分布式事务作为一种关键的技术手段，能够确保在分布式环境下的数据操作的一致性。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>分布式缓存</title>
    <link href="https://www.xiaoyeshiyu.com/post/8bda.html"/>
    <id>https://www.xiaoyeshiyu.com/post/8bda.html</id>
    <published>2023-11-01T16:00:00.000Z</published>
    <updated>2023-11-09T06:21:52.982Z</updated>
    
    
    <summary type="html">在当今的分布式系统中，高性能和可扩展性是至关重要的。而分布式缓存作为一种关键的技术手段，能够显著提升系统的性能和可扩展性。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>架构设计之历史记录设计</title>
    <link href="https://www.xiaoyeshiyu.com/post/f986.html"/>
    <id>https://www.xiaoyeshiyu.com/post/f986.html</id>
    <published>2023-10-29T16:00:00.000Z</published>
    <updated>2023-11-02T07:02:57.744Z</updated>
    
    
    <summary type="html">历史记录是现代应用程序中常见的功能之一，它记录了用户在应用程序中的活动和操作。一个良好设计的历史记录系统可以提供方便的回放、导航和个性化推荐等功能，为用户提供更好的体验。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>微服务可用性设计之降级、重试和负载均衡</title>
    <link href="https://www.xiaoyeshiyu.com/post/a2b0.html"/>
    <id>https://www.xiaoyeshiyu.com/post/a2b0.html</id>
    <published>2023-10-23T16:00:00.000Z</published>
    <updated>2023-12-06T10:10:28.303Z</updated>
    
    
    <summary type="html">介绍了降级、重试和负载均衡这三个策略，旨在提高微服务系统的可用性和稳定性。本文可以了解如何通过降级技术优雅地处理高负载和故障，确保核心功能的正常运行。通过不同的重试策略，以在网络不稳定或服务故障的情况下增加请求的成功率。介绍负载均衡的概念和不同的负载均衡算法，在微服务架构中合理分配请求，实现高可用性和性能优化。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>微服务可用性设计之过载保护和限流</title>
    <link href="https://www.xiaoyeshiyu.com/post/7175.html"/>
    <id>https://www.xiaoyeshiyu.com/post/7175.html</id>
    <published>2023-10-22T16:00:00.000Z</published>
    <updated>2023-10-26T08:55:16.806Z</updated>
    
    
    <summary type="html">微服务架构中的过载保护和限流是确保系统可用性的关键策略之一。当微服务面临突发的高负载或异常情况时，合理的过载保护和限流机制可以防止系统崩溃，并保持对关键服务的稳定响应。本文将深入探讨微服务可用性设计中的过载保护和限流策略。我们将介绍过载保护和限流的概念和原理，讨论不同的实现方法和工具，以及如何根据业务需求和系统特点选择适合的策略。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>微服务可用性设计之超时控制</title>
    <link href="https://www.xiaoyeshiyu.com/post/7397.html"/>
    <id>https://www.xiaoyeshiyu.com/post/7397.html</id>
    <published>2023-10-19T16:00:00.000Z</published>
    <updated>2023-10-26T08:55:16.800Z</updated>
    
    
    <summary type="html">在微服务架构中，超时控制是确保系统可用性的关键因素之一。当微服务之间存在网络延迟或故障时，合理的超时设置可以防止故障扩散，并提高整体系统的稳定性。本文将深入探讨微服务可用性设计中的超时控制策略。我们将介绍超时的重要性，讨论不同类型的超时模式，如请求级超时和资源级超时，并提供针对不同场景的最佳实践和实施建议。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>微服务可用性设计之隔离</title>
    <link href="https://www.xiaoyeshiyu.com/post/40eb.html"/>
    <id>https://www.xiaoyeshiyu.com/post/40eb.html</id>
    <published>2023-10-18T16:00:00.000Z</published>
    <updated>2023-10-26T08:55:16.805Z</updated>
    
    
    <summary type="html">在当今的软件开发中，微服务架构已经成为一种流行的设计模式。然而，随着系统规模的增长和复杂性的提高，确保微服务的可用性变得越来越重要。本文将探讨微服务可用性设计中的一个关键概念：隔离。通过合理的隔离策略，我们可以有效地降低故障的传播范围，提高整体系统的稳定性和可靠性。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Go工程化实践之包管理</title>
    <link href="https://www.xiaoyeshiyu.com/post/e924.html"/>
    <id>https://www.xiaoyeshiyu.com/post/e924.html</id>
    <published>2023-10-16T16:00:00.000Z</published>
    <updated>2023-10-17T10:14:29.126Z</updated>
    
    
    <summary type="html">在Go语言的开发过程中，良好的工程化实践是确保项目可维护性和可扩展性的关键。其中一个重要的方面是包管理，它涉及到如何有效地组织、引入和管理依赖的外部包。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Go工程化实践之测试</title>
    <link href="https://www.xiaoyeshiyu.com/post/c73a.html"/>
    <id>https://www.xiaoyeshiyu.com/post/c73a.html</id>
    <published>2023-10-16T16:00:00.000Z</published>
    <updated>2023-10-20T08:01:02.637Z</updated>
    
    
    <summary type="html">在Go语言的开发过程中，测试是确保代码质量和可靠性的重要环节。良好的测试实践可以帮助我们捕捉潜在的错误、验证代码逻辑，并确保代码在不同场景下的正确行为。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Go工程化实践之配置管理</title>
    <link href="https://www.xiaoyeshiyu.com/post/70.html"/>
    <id>https://www.xiaoyeshiyu.com/post/70.html</id>
    <published>2023-10-16T16:00:00.000Z</published>
    <updated>2023-10-19T08:38:15.618Z</updated>
    
    
    <summary type="html">在现代的软件开发中，配置管理是构建可配置和可扩展应用程序的关键要素之一。在Go语言中，配置管理的良好实践可以使您的应用程序更加灵活和易于管理。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Go工程化实践之API设计</title>
    <link href="https://www.xiaoyeshiyu.com/post/7988.html"/>
    <id>https://www.xiaoyeshiyu.com/post/7988.html</id>
    <published>2023-10-15T16:00:00.000Z</published>
    <updated>2023-10-19T08:23:24.935Z</updated>
    
    
    <summary type="html">在现代软件开发中，良好的API设计是构建可扩展、可维护和易于使用的应用程序的关键。在Go语言中，API设计的重要性更加凸显，因为Go的简洁性和高效性使其成为构建可靠和高性能应用的理想选择。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>架构设计之评论系统</title>
    <link href="https://www.xiaoyeshiyu.com/post/eea5.html"/>
    <id>https://www.xiaoyeshiyu.com/post/eea5.html</id>
    <published>2023-10-06T16:00:00.000Z</published>
    <updated>2023-10-19T09:21:35.684Z</updated>
    
    
    <summary type="html">在Go语言中进行架构设计时，可以采用一些常见的设计模式和原则来帮助组织和管理代码。这里以评论系统作为案例。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Go工程化实践之工程项目结构</title>
    <link href="https://www.xiaoyeshiyu.com/post/d3e3.html"/>
    <id>https://www.xiaoyeshiyu.com/post/d3e3.html</id>
    <published>2023-09-24T16:00:00.000Z</published>
    <updated>2023-10-19T07:43:33.728Z</updated>
    
    
    <summary type="html">在Go语言中，工程项目结构没有强制的规定，但有一些常见的实践和约定，可以帮助组织和管理Go项目。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Go的concurrency之channels</title>
    <link href="https://www.xiaoyeshiyu.com/post/cf24.html"/>
    <id>https://www.xiaoyeshiyu.com/post/cf24.html</id>
    <published>2023-09-21T16:00:00.000Z</published>
    <updated>2023-10-18T03:19:01.621Z</updated>
    
    
    <summary type="html">在Go语言中，channel（通道）是一种用于在 goroutine 之间进行通信和同步的特殊类型。它提供了一种安全、简洁的方式来传递数据和进行并发操作。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
  <entry>
    <title>Go的concurrency之context</title>
    <link href="https://www.xiaoyeshiyu.com/post/d34c.html"/>
    <id>https://www.xiaoyeshiyu.com/post/d34c.html</id>
    <published>2023-09-20T16:00:00.000Z</published>
    <updated>2023-09-21T07:54:12.262Z</updated>
    
    
    <summary type="html">在Go语言中，context包提供了一种在并发操作中传递请求范围数据、取消操作以及处理截止时间的机制。context包可以帮助你优雅地处理并发操作的控制流和资源管理。</summary>
    
    
    
    <category term="Go训练营" scheme="https://www.xiaoyeshiyu.com/categories/GoTrainingCamp/"/>
    
    
    <category term="学习笔记" scheme="https://www.xiaoyeshiyu.com/tags/Reference/"/>
    
  </entry>
  
</feed>
